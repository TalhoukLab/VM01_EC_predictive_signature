## imports 
import os, sys 
import pandas as pd
import numpy as np

## Enviornment configurations
accessionList = "00-helperfiles/antonio_accList.txt"
imtornadoRunFile = "00-helperfiles/tornado-params.sh"
cohort = "Antonio"

## Output directories
workspace = "/Antonio/"
sampleDir = "/01-rawData/Antonio/"

## Required lists 
samples = []
reads = ["1", "2"]

## Making a list of samples
with open(accessionList) as f:
    for line in f:
        sample_full = line.split("\n")
        samples.append(sample_full[0])


rule all:
    threads: 4 
    input:
        expand(workspace + "{samples}_R{reads}.fastq", samples = samples, reads = reads),
        directory(workspace + "results/")

rule create_symlinks:
    input:
       accList = accessionList,
       forwardIn = sampleDir + "{samples}_1.fastq",
       reverseIn = sampleDir +"{samples}_2.fastq"
    output:
        forwardOut = workspace + "{samples}_R1.fastq",
        reverseOut = workspace + "{samples}_R2.fastq"
    threads: 4
    message: "Create symlinks"
    shell:
        """
        ln -s {input.forwardIn} {output.forwardOut}
        ln -s {input.reverseIn} {output.reverseOut}
        """

## Creating a mapping file for snakemake 
df = pd.read_csv(accessionList, names=['#SampleID'])
df.to_csv(workspace+'mapping.txt', header=True, index=None, sep='\t')

rule run_IMTORNADO:
    input:
        files = expand(workspace + "{samples}_R{reads}.fastq", samples = samples, reads = reads),
        imtornadoFile = imtornadoRunFile,
        curDir = workspace,
        cohort = cohort
    output:
        imtornadoResults = directory(workspace + "results/")
    threads: 4
    message: "Running IM-TORNADO"
    params:
        conda_env = "antonio"
    shell:
        """
        set +eu && PS1=dummy && . $(conda info --base)/etc/profile.d/conda.sh && conda activate {params.conda_env} && echo $CONDA_PREFIX; 
        cd {input.cohort}
        cp {input.imtornadoFile} {input.curDir} 
       tornado_run_pipeline1.sh
        """